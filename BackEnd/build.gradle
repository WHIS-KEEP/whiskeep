plugins {
	id 'java'
	id 'checkstyle'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// === Spring Boot Starters ===
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// === Hibernate ===
	implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.7.3'

	// === Log & P6Spy ===
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.2'
	implementation 'org.springframework.boot:spring-boot-starter-logging'

	// === apache Math ===
	implementation 'org.apache.commons:commons-math3:3.6.1'

	// === S3 Client ===
	implementation 'software.amazon.awssdk:s3:2.29.52'

	// === Lombok ===
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// === 개발 도구 ===
//	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// === DB 드라이버 ===
	runtimeOnly 'com.mysql:mysql-connector-j'
	runtimeOnly 'org.postgresql:postgresql:42.5.0'

	// === Elasticsearch ===
	implementation 'org.springframework.boot:spring-boot-starter-data-elasticsearch'
	implementation 'org.springframework.data:spring-data-elasticsearch:5.4.4'

	// === QueryDSL ===
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

	// === 테스트 ===
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('build') {
	dependsOn 'checkstyleMain', 'checkstyleTest'
}

checkstyle {
	maxWarnings = 0
	configFile = file('config/checkstyle/naver-checkstyle-rules.xml')
	configProperties = ['checkstyle.suppressions.file': 'config/checkstyle/naver-checkstyle-suppressions.xml']
	toolVersion = '10.19.0'
}

def querydslDir = layout.buildDirectory.dir("generated/querydsl")

sourceSets {
	main {
		java {
			srcDir querydslDir
		}
	}
}

tasks.named('compileJava', JavaCompile).configure {
	options.compilerArgs += [
			"-s", querydslDir.get().asFile.absolutePath
	]
}

tasks.named('checkstyleMain', Checkstyle) {
	source = source.filter { !it.path.contains('querydsl') }
}

